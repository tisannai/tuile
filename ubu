#!/usr/bin/env ti-guile
!#

(use-modules (ubu))
(define usr-install-path (car (string-split (getenv "GUILE_LOAD_PATH") #\:)))


(ubu-default "install")
(action install
        (let ((files (get-files "tuile/*.scm")))
          (sh-ser (ubu-for-updates files
                                   (map (lambda (i) (cat usr-install-path "/tuile/" i))
                                        (map file-name files))
                                   (lambda (s t) (gap "cp" s t))))))

(action install-force
        (sh "cp -r tuile " usr-install-path))

(action test-pr
        (with-output
         (sh "cd test; test-pr")))

(action test-como
        (with-output
         (sh "cd test; test-como")))

(action test-fn
        (with-output
         (sh "cd test; test-fn")))

(action test-massoc
        (with-output
         (sh "cd test; test-massoc")))

(action test-fmt
        (with-output
         (sh "cd test; test-fmt")))

(action test-graph
        (with-output
         (sh "cd test; test-graph")))

(action test-gulex
        (with-output
         (sh "cd test; test-gulex")))

(action test-vlogmod
        (with-output
         (sh "cd test; test-vlogmod")))

(action test-bval
        (with-output
         (sh "cd test; test-bval")))

(action test-con
        (with-output
         (sh "cd test; test-con")))

(action test-all
        (test-pr)
        (test-como)
        (test-fn)
        (test-massoc)
        (test-fmt)
        (test-graph)
        (test-gulex)
        (test-vlogmod)
        (test-bval)
        (test-con))

(action chez
        (for-each (lambda (file-symbol)
                    (let ((filename (cat (symbol->string file-symbol) ".scm")))
                      (sh (cat "ti-guile-to-chez -i tuile/" filename " -o ../thez/tuile/" filename))))
                  '(como
                    gulex
                    lookup
                    pr
                    re
                    )))

(action clean
        (sh "rm -f test/*.log"))

(ubu-run-cli)
